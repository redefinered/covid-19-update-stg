{"version":3,"sources":["components/loader.component.jsx","components/heading/heading.component.jsx","app.utlis.js","components/world/world.component.jsx","components/canvas/canvas.component.jsx","theme.js","components/svg-line/svg-line.component.jsx","components/country-selector/country-selector.component.jsx","modules/ducks/cases.actions.js","components/chart/chart.component.jsx","components/time/time.component.jsx","components/field/field.component.jsx","components/fields/fields.component.jsx","components/overview/overview.component.jsx","components/most-cases/most-cases.component.jsx","screens/homepage/homepage.utils.js","screens/homepage/homepage.component.jsx","screens/root.component.jsx","modules/ducks/app.js","modules/ducks/cases.reducer.js","modules/index.js","modules/sagas/app-saga.js","modules/services.js","modules/sagas/cases.saga.js","modules/sagas/root-saga.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Loader","Container","className","style","height","Spinner","animation","variant","role","Heading","small","title","Fragment","defaultProps","formatNumber","num","toString","replace","connect","data","casesReducer","herokuAllStatus","worldcases","find","d","country","includedFields","key","label","Table","bordered","size","map","f","Canvas","lineData","configuredWidth","width","configuredHeight","margin","element","React","createRef","useEffect","select","remove","left","right","top","bottom","svg","append","attr","x","scaleTime","range","y","scaleLinear","domain","extent","Date","min","max","xAxisDefinition","axisBottom","ticks","yAxisDefinition","axisLeft","tickSize","tickFormat","tickValues","concat","call","yAxis","selectAll","ref","node","colors","Confirmed","Deaths","Recovered","SVGLine","field","color","toLowerCase","dataLine","line","curve","curveCardinal","defined","datum","countries","isFetching","handleSelect","selectedCountry","handleSearch","searchString","dropdownItems","filter","o","includes","slug","push","Dropdown","Item","name","value","active","onClick","event","Toggle","disabled","id","Menu","Form","Control","onChange","e","type","placeholder","createActions","getInitialData","getInitialDataSuccess","getInitialDataFailure","setCountry","setCountries","getCasesByCountry","getCasesByCountrySuccess","getCasesByCountryFailure","prefix","Types","Creators","Chart","props","setCountryAction","target","getAttribute","setState","setWidth","canvas","current","clientWidth","renderChart","casesFromDayOne","state","gutter","this","error","alert","Alert","length","Component","actions","Time","tick","time","moment","timeInterval","setInterval","clearInterval","format","Field","light","Card","text","bg","Body","Title","Text","Fields","selectedItem","fields","Object","keys","Row","include","undefined","Col","RecentCases","cases","slice","striped","hover","c","countrySlugOverrides","Homepage","getInitialDataAction","prevProps","herokuData","split","join","overrideExists","sortBy","setUpCountriesData","setCountriesAction","getCasesByCountryAction","isFetchingGrahpData","fluid","lg","process","isLoading","appReducer","appReady","appReadySuccess","appReadyFailure","default","defaultState","createReducer","APP_READY","APP_READY_SUCCESS","APP_READY_FAILURE","action","DEFAULT","SET_COUNTRY","SET_COUNTRIES","GET_INITIAL_DATA","GET_INITIAL_DATA_SUCCESS","GET_INITIAL_DATA_FAILURE","GET_CASES_BY_COUNTRY","GET_CASES_BY_COUNTRY_SUCCESS","GET_CASES_BY_COUNTRY_FAILURE","persistConfig","storage","whitelist","appReducers","persistCombineReducers","removeItem","watchApp","put","message","takeLatest","REHYDRATE","REACT_APP_GEOLOCATION_DB_API_KEY","REACT_APP_API_URL","getGeolocation","a","axios","get","Error","getHerokuAllStatus","getInitialDataRequest","getCasesByCountryRequest","watchCases","country_name","isEmpty","rootSaga","all","fork","persistor","store","middleware","sagaMiddleware","createSagaMiddleware","applyMiddleware","createStore","rootReducer","run","persistStore","getState","createAppStore","App","loading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.10d711c9.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Spinner } from 'react-bootstrap';\n\nconst Loader = () => (\n  <Container className=\"d-flex align-items-center justify-content-center\" style={{ height: 200 }}>\n    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </Container>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './heading.styles.scss';\n\nconst Heading = ({ small, title }) => (\n  <React.Fragment>\n    <span className=\"text-muted small-label\">{small}</span>\n    <h3 className=\"mb-3\">{title}</h3>\n  </React.Fragment>\n);\n\nHeading.defaultProps = {\n  small: 'Some Cool Small Intro',\n  title: 'Heading Title'\n};\n\nHeading.propTypes = {\n  small: PropTypes.string,\n  title: PropTypes.string\n};\n\nexport default Heading;\n","export const formatNumber = (num) => {\n  if (!num) return 0;\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport find from 'lodash/find';\nimport { connect } from 'react-redux';\nimport { formatNumber } from 'app.utlis';\n\nimport './world.styles.scss';\n\nconst World = ({ data }) => {\n  const worldcases = find(data, (d) => d.country === 'World');\n  const includedFields = [\n    { key: 'cases', label: 'Confirmed Cases', variant: 'light' },\n    { key: 'todayCases', label: 'New Cases', variant: 'light' },\n    { key: 'deaths', label: 'Deaths', variant: 'light' },\n    { key: 'recovered', label: 'Recoveries', variant: 'light' }\n  ];\n\n  return (\n    <React.Fragment>\n      <Table bordered size=\"sm\">\n        <thead>\n          <tr>\n            {includedFields.map((f) => {\n              return (\n                <th key={f.key} className={`${f.key}-label`}>\n                  {f.label}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {includedFields.map((f) => {\n              return <td key={f.key}>{formatNumber(worldcases[f.key])}</td>;\n            })}\n          </tr>\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nWorld.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = ({ casesReducer: { herokuAllStatus } }) => {\n  return { data: herokuAllStatus };\n};\n\nexport default connect(mapStateToProps)(World);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { select, scaleTime, scaleLinear, extent, min, max, axisBottom, axisLeft } from 'd3';\n\nconst Canvas = ({ data: lineData, width: configuredWidth, height: configuredHeight, margin }) => {\n  let element = React.createRef();\n  let field = 'Confirmed'; // Confirmed key is always the maximum value of the scale\n\n  useEffect(() => {\n    select('svg#chart-canvas').remove();\n    const width = configuredWidth - margin.left - margin.right;\n    const height = configuredHeight - margin.top - margin.bottom;\n    const svgdocument = select(element).append('svg').attr('id', 'chart-canvas');\n\n    const svg = svgdocument\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // define x and y scales\n    let x = scaleTime().range([0, width]);\n    let y = scaleLinear().range([height, 0]);\n\n    // set x and y scale domains\n    x.domain(\n      extent(lineData, function (d) {\n        return new Date(d.Date);\n      })\n    );\n    y.domain([\n      min(lineData, function (d) {\n        return d[field];\n      }),\n      max(lineData, function (d) {\n        return d[field];\n      })\n    ]);\n\n    // setup x axis\n    let xAxisDefinition = axisBottom(x).ticks(5);\n    let yAxisDefinition = axisLeft(y).ticks(5).tickSize(-width).tickFormat('');\n\n    // add a tick at the top of the graph\n    yAxisDefinition.tickValues(y.ticks(5).concat(y.domain()));\n\n    // draw x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0, ${height})`)\n      .call(xAxisDefinition);\n\n    // draw y axis\n    let yAxis = svg\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('transform', 'translate(0, 0)')\n      .call(yAxisDefinition);\n\n    // remove vertical y axis\n    yAxis.select('.domain').remove();\n\n    // make y axis ticks grey\n    yAxis.selectAll('.tick').attr('color', 'lightgray');\n  }, [lineData, configuredWidth, configuredHeight, margin, element, field]);\n\n  return (\n    <div\n      className=\"element\"\n      ref={(node) => {\n        element = node;\n      }}\n    ></div>\n  );\n};\n\nCanvas.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object.isRequired\n};\n\nexport default Canvas;\n","export const colors = {\n  Confirmed: '#17a2b8',\n  Deaths: '#dc3545',\n  Recovered: '#28a745'\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { select, scaleTime, scaleLinear, extent, min, max, line, curveCardinal } from 'd3';\nimport { colors } from 'theme';\n\nconst SVGLine = ({\n  field,\n  data: lineData,\n  width: configuredWidth,\n  height: configuredHeight,\n  margin,\n  color\n}) => {\n  let element = React.createRef();\n\n  useEffect(() => {\n    select(`svg#${field.toLowerCase()}`).remove();\n    const width = configuredWidth - margin.left - margin.right;\n    const height = configuredHeight - margin.top - margin.bottom;\n    const svgdocument = select(element).append('svg').attr('id', `${field.toLowerCase()}`);\n\n    const svg = svgdocument\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // define x and y scales\n    let x = scaleTime().range([0, width]);\n    let y = scaleLinear().range([height, 0]);\n\n    // set x and y scale domains\n    x.domain(\n      extent(lineData, function (d) {\n        return new Date(d.Date);\n      })\n    );\n    y.domain([\n      min(lineData, function (d) {\n        return d.Confirmed;\n      }),\n      max(lineData, function (d) {\n        return d.Confirmed;\n      })\n    ]);\n\n    // draw lines\n    let dataLine = line()\n      .curve(curveCardinal)\n      .defined(function (d) {\n        return d[field]; // return true if Confirmed ket is defined or not equal to null\n      })\n      .x(function (d) {\n        return x(new Date(d.Date));\n      })\n      .y(function (d) {\n        return y(d[field]);\n      });\n\n    svg\n      .append('path')\n      .datum(lineData)\n      .attr('fill', 'none')\n      .attr('stroke', colors[field])\n      .attr('stroke-width', 2)\n      .attr('d', dataLine);\n  }, [lineData, configuredWidth, configuredHeight, margin, element, field, color]);\n\n  return (\n    <div\n      className=\"element\"\n      ref={(node) => {\n        element = node;\n      }}\n    ></div>\n  );\n};\n\nSVGLine.propTypes = {\n  field: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object.isRequired,\n  color: PropTypes.string\n};\n\nexport default SVGLine;\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport filter from 'lodash/filter';\nimport includes from 'lodash/includes';\n\nimport { connect } from 'react-redux';\n\nimport './country-selector.styles.css';\n\nconst CountrySelector = ({\n  isFetching,\n  data,\n  handleSelect,\n  selectedCountry,\n  handleSearch,\n  searchString\n}) => {\n  let dropdownItems = [];\n  let filteredData = filter(data, (o) => includes(o.slug, searchString.toLowerCase()));\n\n  // eslint-disable-next-line\n  filteredData.map((d) => {\n    dropdownItems.push(\n      <Dropdown.Item\n        key={d.name}\n        value={d.name}\n        active={d.name === selectedCountry}\n        onClick={(event) => handleSelect(event)}\n      >\n        {d.name}\n      </Dropdown.Item>\n    );\n  });\n  return (\n    <Dropdown>\n      <Dropdown.Toggle disabled={isFetching} variant=\"primary\" id=\"dropdown-basic\">\n        {isFetching ? 'Fetching...' : selectedCountry}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <div className=\"px-4 my-2\">\n          <Form.Control\n            onChange={(e) => handleSearch(e)}\n            type=\"search\"\n            placeholder=\"Search your country...\"\n          />\n        </div>\n        <div className=\"dropdown-menu-list\">{dropdownItems}</div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nCountrySelector.propTypes = {\n  countries: PropTypes.array\n};\n\nconst mapStateToProps = ({ casesReducer: { countries } }) => {\n  return { data: countries };\n};\n\nexport default connect(mapStateToProps)(CountrySelector);\n","import { createActions } from 'reduxsauce';\n\nconst { Types, Creators } = createActions(\n  {\n    getInitialData: [],\n    getInitialDataSuccess: ['data'],\n    getInitialDataFailure: ['error'],\n    setCountry: ['country'],\n    setCountries: ['countries'],\n    getCasesByCountry: ['country'],\n    getCasesByCountrySuccess: ['data'],\n    getCasesByCountryFailure: ['error']\n  },\n  { prefix: '@Cases/' }\n);\n\nexport { Types, Creators };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'components/loader.component';\nimport Canvas from 'components/canvas/canvas.component';\nimport SVGLine from 'components/svg-line/svg-line.component';\nimport CountrySelector from 'components/country-selector/country-selector.component';\nimport { Alert } from 'react-bootstrap';\nimport Heading from 'components/heading/heading.component';\n\nimport { connect } from 'react-redux';\nimport { Creators } from 'modules/ducks/cases.actions';\n\nimport './chart-component.styles.scss';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchString: '',\n      width: 0,\n      height: 0\n    };\n\n    this.margin = { top: 40, right: 0, bottom: 20, left: 0 };\n\n    this.canvas = React.createRef();\n    this.gutter = 30; // this is constant bootstrap gutter\n  }\n\n  handleSelect = (event) => {\n    this.props.setCountryAction(event.target.getAttribute('value'));\n  };\n\n  handleSearch = (event) => {\n    this.setState({ searchString: event.target.value });\n  };\n\n  componentDidMount() {\n    this.setWidth();\n  }\n\n  setWidth = () => {\n    this.setState({\n      width: this.canvas.current.clientWidth,\n      height: 400\n    });\n  };\n\n  renderChart = ({ casesFromDayOne: data, width, height }) => (\n    <div className=\"chart-container\" style={{ height }}>\n      <Canvas data={data} width={width} height={height} margin={this.margin} />\n      <SVGLine field=\"Confirmed\" data={data} width={width} height={height} margin={this.margin} />\n      <SVGLine field=\"Recovered\" data={data} width={width} height={height} margin={this.margin} />\n      <SVGLine field=\"Deaths\" data={data} width={width} height={height} margin={this.margin} />\n    </div>\n  );\n\n  render() {\n    const { searchString, width, height } = this.state;\n    const { error, isFetching, selectedCountry, casesFromDayOne } = this.props;\n\n    const alert = (\n      <Alert className=\"mt-3\" variant=\"warning\">\n        No data\n      </Alert>\n    );\n\n    if (error) return <Alert variant=\"danger\">{error}</Alert>;\n\n    return (\n      <div ref={this.canvas}>\n        <Heading small=\"What the curve looks like\" title=\"Data Visualization\" />\n        <CountrySelector\n          isFetching={isFetching}\n          handleSelect={this.handleSelect}\n          selectedCountry={selectedCountry}\n          handleSearch={this.handleSearch}\n          searchString={searchString}\n        />\n        {!isFetching ? (\n          casesFromDayOne.length ? (\n            this.renderChart({ casesFromDayOne, width, height })\n          ) : (\n            alert\n          )\n        ) : (\n          <Loader />\n        )}\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  // reducers\n  error: PropTypes.string,\n  isFetching: PropTypes.bool,\n  casesFromDayOne: PropTypes.array,\n  selectedCountry: PropTypes.string,\n  herokuData: PropTypes.array,\n  // actions\n  setCountryAction: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  const { casesFromDayOne } = state.casesReducer;\n  return { casesFromDayOne };\n};\n\nconst actions = {\n  setCountryAction: Creators.setCountry\n};\n\nexport default connect(mapStateToProps, actions)(Chart);\n","import React from 'react';\nimport moment from 'moment';\n\nclass Time extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: moment()\n    };\n  }\n\n  tick = () => {\n    this.setState({ time: moment() });\n  };\n\n  componentDidMount() {\n    this.timeInterval = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n\n  render() {\n    const { time } = this.state;\n    return (\n      <div className=\"time\">\n        <p>\n          As of <strong>{`${time.format('dddd, D MMM YYYY')} ${time.format('hh:mm:ss A')}`}</strong>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\n\nimport { formatNumber } from 'app.utlis';\n\nimport './field.styles.css';\n\nconst Field = ({ title, value, color, light }) => {\n  return (\n    <Card text={light ? 'black' : 'white'} bg={color} className=\"mb-4\">\n      <Card.Body className=\"text-center my-4\">\n        <Card.Title>\n          <strong>{title}</strong>\n        </Card.Title>\n        <Card.Text className=\"figure\">{formatNumber(value)}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nField.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  light: PropTypes.bool\n};\n\nexport default Field;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Field from 'components/field/field.component';\nimport Heading from 'components/heading/heading.component';\nimport { Row, Col } from 'react-bootstrap';\nimport find from 'lodash/find';\n\nconst Fields = ({ data, country }) => {\n  const selectedItem = find(data, (d) => d.country === country);\n  const fields = Object.keys(selectedItem);\n  const includedFields = [\n    { key: 'cases', label: 'Confirmed Cases', variant: 'info' },\n    { key: 'todayCases', label: 'New Cases', variant: 'warning' },\n    { key: 'deaths', label: 'Deaths', variant: 'danger' },\n    { key: 'recovered', label: 'Recoveries', variant: 'success' }\n  ];\n\n  return (\n    <React.Fragment>\n      <Heading small={`Cases in ${country}`} title=\"Country Overview\" />\n      <Row>\n        {/* eslint-disable-next-line array-callback-return */}\n        {fields.map((field) => {\n          let include = find(includedFields, (o) => {\n            return o.key === field;\n          });\n          if (include !== undefined) {\n            return (\n              <Col key={field}>\n                <Field title={include.label} value={selectedItem[field]} color={include.variant} />\n              </Col>\n            );\n          }\n        })}\n      </Row>\n    </React.Fragment>\n  );\n};\n\nFields.propTypes = {\n  country: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nexport default Fields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'components/loader.component';\nimport Time from 'components/time/time.component';\nimport Fields from 'components/fields/fields.component';\n\nclass RecentCases extends React.Component {\n  render() {\n    const { data, country } = this.props;\n\n    return (\n      <div>\n        <h1>Covid-19 Updates</h1>\n        <Time />\n        <p className=\"lead\">\n          This page updates everyday so you stay updated on the global situation regarding the\n          Coronovirus pandemic\n        </p>\n        {data.length === 0 || !country ? <Loader /> : <Fields country={country} data={data} />}\n      </div>\n    );\n  }\n}\n\nRecentCases.propTypes = {\n  data: PropTypes.array,\n  country: PropTypes.string\n};\nexport default RecentCases;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Heading from 'components/heading/heading.component';\nimport { Table } from 'react-bootstrap';\n\nimport { connect } from 'react-redux';\nimport { formatNumber } from 'app.utlis';\nimport slice from 'lodash/slice';\n\nconst MostCases = ({ data }) => {\n  const cases = slice(data, 1, 11);\n  return (\n    <React.Fragment>\n      <Heading small=\"10 countries with most cases\" title=\"Largest Cases\" />\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Country</th>\n            <th>Confirmed Cases</th>\n          </tr>\n        </thead>\n        <tbody>\n          {cases.map((c) => {\n            return (\n              <tr key={c.country}>\n                <td>{c.country}</td>\n                <td>{formatNumber(c.cases)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nMostCases.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = ({ casesReducer: { herokuAllStatus: data } }) => {\n  return { data };\n};\n\nexport default connect(mapStateToProps)(MostCases);\n","import sortBy from 'lodash/sortBy';\nimport find from 'lodash/find';\n\nexport const countrySlugOverrides = [\n  { country: 'USA', slug: 'united-states' },\n  { country: 'Hong Kong', slug: 'hong-kong-sar-china' }\n];\n\nexport const setUpCountriesData = (herokuData) => {\n  let countries = [];\n  countries = herokuData.map((d) => {\n    let slug = d.country.toLowerCase().split(' ').join('-');\n    let overrideExists = find(countrySlugOverrides, (c) => c.country === d.country);\n    if (overrideExists) slug = overrideExists.slug;\n    return {\n      name: d.country,\n      slug\n    };\n  });\n  // sort by country name\n  countries = sortBy(countries, (c) => c.name);\n  return countries;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'components/loader.component';\nimport Heading from 'components/heading/heading.component';\nimport World from 'components/world/world.component';\nimport Chart from 'components/chart/chart.component';\nimport Overview from 'components/overview/overview.component';\nimport MostCases from 'components/most-cases/most-cases.component';\nimport { Container, Col, Row, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Creators } from 'modules/ducks/cases.actions';\nimport { setUpCountriesData } from './homepage.utils';\nimport find from 'lodash/find';\n\nimport './homepage.styles.scss';\n\nconst { REACT_APP_VERSION } = process.env;\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.getInitialDataAction();\n  }\n\n  componentDidUpdate(prevProps) {\n    // set countries data\n    if (prevProps.herokuData !== this.props.herokuData) {\n      const countries = setUpCountriesData(this.props.herokuData);\n      this.props.setCountriesAction(countries);\n    }\n\n    // get cases\n    if (\n      this.props.selectedCountry &&\n      this.props.countries.length &&\n      prevProps.countries !== this.props.countries\n    ) {\n      let { slug } = find(this.props.countries, (c) => c.name === this.props.selectedCountry);\n      this.props.getCasesByCountryAction(slug);\n    }\n\n    if (prevProps.selectedCountry !== this.props.selectedCountry) {\n      let country = find(this.props.countries, (c) => c.name === this.props.selectedCountry);\n      if (country) this.props.getCasesByCountryAction(country.slug);\n    }\n  }\n\n  render() {\n    const { error, isFetching, isFetchingGrahpData, herokuData, selectedCountry, countries } = this.props;\n\n    if (isFetching || !selectedCountry || herokuData.length === 0) return <Loader />;\n\n    if (error) return <Alert variant=\"danger\">{error}</Alert>;\n\n    return (\n      <Container fluid>\n        <Row className=\"my-3\">\n          <Col lg=\"9\" className=\"main\">\n            <Row>\n              <Col lg=\"4\">\n                <Overview country={selectedCountry} data={herokuData} />\n              </Col>\n              <Col lg=\"8\">\n                <Heading small=\"Worldwide\" title=\"World Overview\" />\n                <World />\n                <Chart\n                  error={error}\n                  countries={countries}\n                  selectedCountry={selectedCountry}\n                  isFetching={isFetchingGrahpData}\n                  herokuData={herokuData}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col lg=\"3\" className=\"sidebar\">\n            {/* sidebar here */}\n            <MostCases />\n          </Col>\n        </Row>\n        <footer className=\"py-3\">\n          <p className=\"text-muted\">&copy; reddeguzman | {`v${REACT_APP_VERSION}`}</p>\n        </footer>\n      </Container>\n    );\n  }\n}\n\nHomepage.propTypes = {\n  // reducers\n  error: PropTypes.string,\n  isFetching: PropTypes.bool,\n  isFetchingGrahpData: PropTypes.bool,\n  selectedCountry: PropTypes.string,\n  countries: PropTypes.array,\n  herokuData: PropTypes.array,\n  // actions\n  getInitialDataAction: PropTypes.func,\n  getCasesByCountryAction: PropTypes.func,\n  setCountriesAction: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    error,\n    isFetching,\n    isFetchingGrahpData,\n    country: selectedCountry,\n    countries,\n    herokuAllStatus: herokuData\n  } = state.casesReducer;\n  return { error, isFetching, isFetchingGrahpData, selectedCountry, countries, herokuData };\n};\n\nconst actions = {\n  getInitialDataAction: Creators.getInitialData,\n  setCountriesAction: Creators.setCountries,\n  getCasesByCountryAction: Creators.getCasesByCountry\n};\n\nexport default connect(mapStateToProps, actions)(Homepage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HomePage from 'screens/homepage/homepage.component';\nimport { connect } from 'react-redux';\n\nconst RootComponent = ({ isLoading }) => {\n  if (isLoading) return <p>Getting the app ready...</p>;\n  return <HomePage />;\n};\n\nRootComponent.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => {\n  const { isLoading } = state.appReducer;\n  return { isLoading };\n};\n\nexport default connect(mapStateToProps, null)(RootComponent);\n","import { createReducer, createActions } from 'reduxsauce';\n\nconst { Types, Creators } = createActions(\n  {\n    appReady: null,\n    appReadySuccess: null,\n    appReadyFailure: ['error'],\n    default: null\n  },\n  {}\n);\n\nexport { Types, Creators };\n\nconst defaultState = {\n  isLoading: true,\n  error: null\n};\n\nexport default createReducer(defaultState, {\n  [Types.APP_READY]: (state) => {\n    return {\n      ...state,\n      isLoading: true\n    };\n  },\n  [Types.APP_READY_SUCCESS]: (state) => {\n    return {\n      ...state,\n      isLoading: false\n    };\n  },\n  [Types.APP_READY_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      error: action.error,\n      isLoading: false\n    };\n  },\n  [Types.DEFAULT]: () => {\n    return {\n      ...defaultState,\n      isLoading: false\n    };\n  }\n});\n","import { createReducer } from 'reduxsauce';\nimport { Types } from './cases.actions';\n\nconst defaultState = {\n  error: null,\n  isFetching: false,\n  isFetchingGrahpData: false,\n  country: null,\n  countries: [],\n  casesFromDayOne: [],\n  herokuAllStatus: [] // comes from heroku coronovirus 19 API\n};\n\nexport default createReducer(defaultState, {\n  [Types.SET_COUNTRY]: (state, action) => {\n    return {\n      ...state,\n      isFetching: false,\n      country: action.country\n    };\n  },\n  [Types.SET_COUNTRIES]: (state, action) => {\n    const { countries } = action;\n    return {\n      ...state,\n      countries\n    };\n  },\n  [Types.GET_INITIAL_DATA]: (state) => {\n    return {\n      ...state,\n      isFetching: true\n    };\n  },\n  [Types.GET_INITIAL_DATA_SUCCESS]: (state, action) => {\n    const { country, herokuAllStatus } = action.data;\n    return {\n      ...state,\n      isFetching: false,\n      country,\n      herokuAllStatus,\n      error: null\n    };\n  },\n  [Types.GET_INITIAL_DATA_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      isFetching: false,\n      error: action.error\n    };\n  },\n  [Types.GET_CASES_BY_COUNTRY]: (state) => {\n    return {\n      ...state,\n      isFetchingGrahpData: true\n    };\n  },\n  [Types.GET_CASES_BY_COUNTRY_SUCCESS]: (state, action) => {\n    const { casesFromDayOne } = action.data;\n    return {\n      ...state,\n      isFetchingGrahpData: false,\n      casesFromDayOne,\n      error: null\n    };\n  },\n  [Types.GET_CASES_BY_COUNTRY_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      isFetchingGrahpData: false,\n      error: action.error\n    };\n  }\n});\n","import { persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport appReducer from 'modules/ducks/app';\nimport casesReducer from 'modules/ducks/cases.reducer';\n\nconst persistConfig = {\n  key: 'primary',\n  storage,\n  whitelist: ['casesReducer']\n};\n\nconst appReducers = persistCombineReducers(persistConfig, {\n  appReducer,\n  casesReducer\n});\n\nexport default (state, action) => {\n  if (action.type === 'PURGE_STORE') {\n    storage.removeItem('persist:primary');\n    state = undefined;\n  }\n\n  return appReducers(state, action);\n};\n","import { takeLatest, put } from 'redux-saga/effects';\nimport { REHYDRATE } from 'redux-persist';\nimport { Creators } from 'modules/ducks/app';\n\nexport function* appReady() {\n  try {\n    // This action will be launched after Finishing Store Rehydrate\n    yield put(Creators.appReadySuccess());\n  } catch (e) {\n    yield put(Creators.appReadyFailure(e.message));\n  }\n}\n\nexport function* watchApp() {\n  yield takeLatest(REHYDRATE, appReady);\n}\n","import axios from 'axios';\n\nconst { REACT_APP_GEOLOCATION_DB_API_KEY, REACT_APP_API_URL } = process.env;\n\nexport const getGeolocation = async () => {\n  try {\n    let { data } = await axios.get(\n      `https://geolocation-db.com/json/${REACT_APP_GEOLOCATION_DB_API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getCasesByCountry = async (country) => {\n  try {\n    let { data } = await axios.get(`${REACT_APP_API_URL}/dayone/country/${country}`);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getHerokuAllStatus = async () => {\n  try {\n    let { data } = await axios.get('https://coronavirus-19-api.herokuapp.com/countries');\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","import { takeLatest, put, call } from 'redux-saga/effects';\nimport { Types, Creators } from 'modules/ducks/cases.actions';\nimport { getGeolocation, getCasesByCountry, getHerokuAllStatus } from 'modules/services';\nimport isEmpty from 'lodash/isEmpty';\n\nfunction* getInitialDataRequest() {\n  try {\n    const { country_name: country } = yield call(getGeolocation);\n    const herokuAllStatus = yield call(getHerokuAllStatus);\n    if (isEmpty(herokuAllStatus)) throw new Error('Error: no data available');\n    yield put(Creators.getInitialDataSuccess({ country, herokuAllStatus }));\n  } catch (error) {\n    yield put(Creators.getInitialDataFailure(error.message));\n  }\n}\n\nfunction* getCasesByCountryRequest(action) {\n  try {\n    let casesFromDayOne = yield call(getCasesByCountry, action.country);\n    yield put(Creators.getCasesByCountrySuccess({ casesFromDayOne }));\n  } catch (error) {\n    yield put(Creators.getCasesByCountryFailure(error.message));\n  }\n}\n\nexport function* watchCases() {\n  yield takeLatest(Types.GET_INITIAL_DATA, getInitialDataRequest);\n  yield takeLatest(Types.GET_CASES_BY_COUNTRY, getCasesByCountryRequest);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { watchApp } from 'modules/sagas/app-saga';\nimport { watchCases } from 'modules/sagas/cases.saga';\n\nexport default function* rootSaga() {\n  yield all([fork(watchApp), fork(watchCases)]);\n}\n","/* eslint-disable no-undef */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from 'modules';\nimport rootSaga from 'modules/sagas/root-saga';\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\n// Create store\nconst createAppStore = () => {\n  let store = null;\n  let persistor = null;\n  let middleware = null;\n  const sagaMiddleware = createSagaMiddleware();\n\n  if (isProduction) {\n    // Producction middlewares\n    middleware = applyMiddleware(sagaMiddleware);\n  } else {\n    // define the logger\n    const logger = createLogger({ collapsed: true });\n\n    // Development middlewares\n    middleware = applyMiddleware(sagaMiddleware, logger);\n\n    // Enable redux devtool if browser extension is installed\n    if (window.__REDUX_DEVTOOLS_EXTENSION__) {\n      middleware = compose(middleware, window.__REDUX_DEVTOOLS_EXTENSION__());\n    }\n  }\n\n  store = createStore(rootReducer, middleware);\n\n  sagaMiddleware.run(rootSaga);\n  // begin periodically persisting the store\n  persistor = persistStore(store, null, () => store.getState());\n\n  if (module.hot) {\n    // Enable webpack hot module replacement for redux modules\n    module.hot.accept('./modules', () => {\n      const nextRootReducer = require('./modules/index').default;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  // Return store and persistor instance\n  return { store, persistor };\n};\n\nconst { store, persistor } = createAppStore();\n\nexport { store, persistor };\n","import React from 'react';\nimport RootComponent from 'screens/root.component';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from 'store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <div className=\"App\">\n          <RootComponent />\n        </div>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}